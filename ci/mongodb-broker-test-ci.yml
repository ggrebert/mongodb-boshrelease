---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

resources:

  - name: mongodb-bosh-release
    type: git
    source:
      uri:    ((repositories.mongodb.uri))
      branch: ((repositories.mongodb.branch))

  - name: mongodb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-boshrelease.git
      branch: ((repositories.mongodb.branch))
      file: mongodb_version
      username: ((repositories.mongodb.username))
      password: ((repositories.mongodb.password))
      git_user: "((repositories.mongodb.git_user)) <((repositories.mongodb.email))>"

jobs:

- name: deploy-replicaset
  plan:
    - &prepare-release
      do:
      - get: mongodb-bosh-release
      - aggregate:
        - get: mongodb-version
          trigger: true
        - &create-bosh-config
          task: create-bosh-config
          file: mongodb-bosh-release/ci/tasks/create-bosh-config.yml
          params:
            CA_CERT:  ((bosh-server.ca))
            IP:       ((bosh-server.ip))
            ALIAS:    ((bosh-server.alias)) 
            USER:     ((bosh-server.user))
            PASSWORD: ((bosh-server.password))

      - &get-config-files
        task: get-config-files
        file: mongodb-bosh-release/ci/tasks/get-config-files.yml
        params: &get-config-files-params
          USE_RELEASE_CONFIG: ((blobstores.release.use_release_config))
          ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
          SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
          ENDPOINT_URL:       ((blobstores.release.endpoint-url))
          BUCKET:             ((blobstores.release.bucket))
          SIGNATURE_VERSION:  ((blobstores.release.signature-version))
          SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
          SSL_CERT:           ((blobstores.release.certificate))
          GOLANG_VERSION:     ((deployment.golang-version))
          CONFIG_PATH:        ((blobstores.release.config_path))

    - &deployment
      task: deploy-rs
      file: mongodb-bosh-release/ci/tasks/deploy-rs.yml
      attempts: 1
      params: &deploy-parameters
        MANIFEST:             manifest-rs.yml
        OPSFILES:             |
                              enable-mongodb-broker.yml 
                              enable-mongodb-broker-route-registrar.yml 
#                              enable-mongodb-broker-smoke-tests.yml
        CA_CERT:              ((bosh-server.ca))
        IP:                   ((bosh-server.ip))
        ALIAS:                ((bosh-server.alias))
        USER:                 ((bosh-server.user))
        PASSWORD:             ((bosh-server.password))
        RELEASE_NAME:         ((deployment.name))
        DEPLOYMENT_NAME:      ((deployment.name))
        DEPLOYMENT_NETWORK:   ((deployment.network))
        PERSISTENT_DISK_TYPE: ((deployment.mongodb.persistent-disk-type))
        VM_TYPE:              ((deployment.mongodb.vm-type))        
        MONGO_PORT:           ((deployment.mongodb.port))
        ROOT_USERNAME:        ((deployment.mongodb.root-username))
        NB_INSTANCES:         ((deployment.mongodb.nb_instances))
        ENGINE:               "wiredtiger"
        BROKER_VM_TYPE:       ((deployment.broker.vm_type))
        BROKER_PERSISTENT_DISK_TYPE: ((deployment.broker.persistent_disk_type))
        BROKER_CATALOG_YML:   ((deployment.broker.catalog_yml))
        # for ssl deployment not fully implemented YET
        #REQUIRE_SSL:          ((deployment.mongodb.require_ssl))
        #CA_NAME:              ((deployment.mongodb.ca_name))
        # for cloudfoundry deployment
        CLOUDFOUNDRY_NATS_HOST: ((cloudfoundry.nats_host))
        CLOUDFOUNDRY_NATS_PASSWORD: ((cloudfoundry.nats_password))
        CLOUDFOUNDRY_SYSTEM_DOMAIN: ((cloudfoundry.system_domain))