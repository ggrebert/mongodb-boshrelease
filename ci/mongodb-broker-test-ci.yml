---
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

resources:

  - name: mongodb-bosh-release
    type: git
    source:
      uri:    ((repositories.mongodb.uri))
      branch: ((repositories.mongodb.branch))

  - name: mongodb-version
    type: semver
    source: 
      initial_version: 1.0.0
      driver: git
      uri: https://github.com/orange-cloudfoundry/mongodb-boshrelease.git
      branch: ((repositories.mongodb.branch))
      file: mongodb_version
      username: ((repositories.mongodb.username))
      password: ((repositories.mongodb.password))
      git_user: "((repositories.mongodb.git_user)) <((repositories.mongodb.email))>"

jobs:

- &deploy-rs
  name: deploy-rs
  plan:
    - get: mongodb-bosh-release
    - aggregate:
      - get: mongodb-version
        trigger: true
      - &create-bosh-config
        task: create-bosh-config
        file: mongodb-bosh-release/ci/tasks/create-bosh-config.yml
        params:
          CA_CERT:  ((bosh-server.ca))
          IP:       ((bosh-server.ip))
          ALIAS:    ((bosh-server.alias)) 
          USER:     ((bosh-server.user))
          PASSWORD: ((bosh-server.password))

    - &get-config-files
      task: get-config-files
      file: mongodb-bosh-release/ci/tasks/get-config-files.yml
      params: &get-config-files-params
        USE_RELEASE_CONFIG: ((blobstores.release.use_release_config))
        ACCESS_KEY_ID:      ((blobstores.release.access_key_id))
        SECRET_ACCESS_KEY:  ((blobstores.release.secret_access_key))
        ENDPOINT_URL:       ((blobstores.release.endpoint-url))
        BUCKET:             ((blobstores.release.bucket))
        SIGNATURE_VERSION:  ((blobstores.release.signature-version))
        SKIP_SSL:           ((blobstores.release.skip-ssl-validation))
        SSL_CERT:           ((blobstores.release.certificate))
        GOLANG_VERSION:     ((deployment.golang-version))
        CONFIG_PATH:        ((blobstores.release.config_path))       
